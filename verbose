#!/bin/bash

function LIGHT_GREEN {
	local COLOR='\033[1;32m'
	local NC='\033[0m'
	echo "${COLOR}$@${NC}"
}

function GREEN {
	local COLOR='\033[0;32m'
	local NC='\033[0m'
	echo "${COLOR}$@${NC}"
}

function LIGHT_GRAY {
	local COLOR='\033[0;37m'
	local NC='\033[0m'
	echo "${COLOR}$1${NC}"
}

function GRAY {
	local COLOR='\033[1;90m'
	local NC='\033[0m'
	echo "${COLOR}$@${NC}"
}

function BLUE {
	local COLOR='\033[1;34m'
	local NC='\033[0m'
	echo "${COLOR}$@${NC}"
}

function RED {
	local COLOR='\033[1;31m'
	local NC='\033[0m'
	echo "${COLOR}$@${NC}"
}

function PURPLE {
	local COLOR='\033[0;35m'
	local NC='\033[0m'
	echo "${COLOR}$@${NC}"
}

function YELLOW {
	local COLOR='\033[0;33m'
	local NC='\033[0m'
	echo "${COLOR}$@${NC}"
}

function TIMESTAMP {
	date '+%m/%d %H:%M:%S' 2>&1
}

function DBG {
	if [ "true" == "${SCRIPT_DEBUG}" ]; then
		echo -e "$(GRAY $(TIMESTAMP)) $(BLUE ${SCRIPT_NAME}) DBG: $@${LOG_LINE_END}"
	fi
}

function INFO {
	echo -e "$(GRAY $(TIMESTAMP)) $(BLUE ${SCRIPT_NAME}) MSG: $@${LOG_LINE_END}"
}

function ERR {
	echo -e "$(GRAY $(TIMESTAMP)) $(BLUE ${SCRIPT_NAME}) ERR: $@${LOG_LINE_END}"
}

function RUN_CMD_STREAMING {
	DBG "$(PURPLE $@)"
	$@ 2>&1 | awk '{printf "\t\t%s\n", $0}'
}

function init_verbose {
	[ "" == "$1" ] && export SCRIPT_NAME="misc" || export SCRIPT_NAME=$(basename $1)
}

function init-verbose {
	# to keep backward compatibility, this function must exist.
	#
	init_verbose $@
}

